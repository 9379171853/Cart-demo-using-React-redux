{"version":3,"sources":["util.js","actions/cartActions.js","actions/types.js","components/Products.js","actions/productActions.js","components/Filter.js","components/Basket.js","reducers/productReducers.js","reducers/index.js","reducers/cartReducers.js","store.js","App.js","serviceWorker.js","index.js"],"names":["util","num","Number","toFixed","toLocaleString","addToCart","items","product","dispatch","cartItems","slice","productAlreadyInCart","forEach","cp","id","count","push","Object","objectSpread","localStorage","setItem","JSON","stringify","type","payload","Products","this","props","fetchProducts","_this","productItems","products","map","react_default","a","createElement","className","key","href","concat","onClick","e","src","sku","alt","title","price","Component","connect","state","filteredItems","cart","fetch","then","res","json","catch","err","data","Filter","filteredProducts","length","value","sort","onChange","event","sortProducts","target","size","filterProducts","filter","x","availableSizes","indexOf","toUpperCase","b","Basket","style","marginLeft","item","float","removeFromCart","reduce","c","alert","initState","combineReducers","arguments","undefined","action","getItem","parse","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducers","applyMiddleware","thunk","App","es","components_Filter","components_Products","components_Basket","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a4e13ee.chunk.js","sourcesContent":["export default {\r\n    formatCurrency: function (num) {\r\n        return '$' + Number(num.toFixed(1)).toLocaleString() + ' ';\r\n    }\r\n}","import { ADD_TO_CART, REMOVE_FROM_CART } from \"./types\";\r\n\r\nexport const addToCart = (items, product) => (dispatch) => {\r\n  const cartItems = items.slice();\r\n  let productAlreadyInCart = false;\r\n\r\n  cartItems.forEach((cp) => {\r\n    if (cp.id === product.id) {\r\n      cp.count += 1;\r\n      productAlreadyInCart = true;\r\n    }\r\n  });\r\n\r\n  if (!productAlreadyInCart) {\r\n    cartItems.push({ ...product, count: 1 });\r\n  }\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  dispatch({ type: ADD_TO_CART, payload: { cartItems } });\r\n};\r\n\r\nexport const removeFromCart = (items, product) => (dispatch) => {\r\n  const cartItems = items.slice().filter((a) => a.id !== product.id);\r\n  localStorage.setItem(\"cartItems\", JSON.stringify(cartItems));\r\n  dispatch({ type: REMOVE_FROM_CART, payload: { cartItems } });\r\n};\r\n","export const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\nexport const FILTER_PRODUCTS_BY_SIZE = \"FILTER_PRODUCTS_BY_SIZE\";\r\nexport const ORDER_PRODUCTS_BY_PRICE = \"ORDER_PRODUCTS_BY_PRICE\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport util from \"../util\";\r\nimport { addToCart } from \"../actions/cartActions\";\r\nimport { fetchProducts } from \"../actions/productActions\";\r\nclass Products extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchProducts();\r\n  }\r\n  render() {\r\n    const productItems = this.props.products.map((product) => (\r\n      <div className=\"col-md-4\" key={product.id}>\r\n        <div className=\"thumbnail text-center\">\r\n          <a\r\n            href={`#${product.id}`}\r\n            onClick={(e) => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            <img src={`${product.sku}`} alt={product.title} />\r\n            <p>{product.title}</p>\r\n          </a>\r\n          <b>{util.formatCurrency(product.price)}</b>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={(e) => this.props.addToCart(this.props.cartItems, product)}\r\n          >\r\n            Add to cart\r\n          </button>\r\n        </div>\r\n      </div>\r\n    ));\r\n\r\n    return <div className=\"row\">{productItems}</div>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.filteredItems,\r\n  cartItems: state.cart.items,\r\n});\r\nexport default connect(mapStateToProps, { fetchProducts, addToCart })(Products);\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  FILTER_PRODUCTS_BY_SIZE,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n} from \"./types\";\r\n\r\nexport const fetchProducts = () => (dispatch) => {\r\n  fetch(\"http://localhost:8000/products\")\r\n    .then((res) => res.json())\r\n    .catch((err) =>\r\n      fetch(\"db.json\")\r\n        .then((res) => res.json())\r\n        .then((data) => data.products)\r\n    )\r\n    .then((data) => {\r\n      dispatch({ type: FETCH_PRODUCTS, payload: data });\r\n    });\r\n};\r\n\r\nexport const filterProducts = (products, size) => (dispatch) => {\r\n  dispatch({\r\n    type: FILTER_PRODUCTS_BY_SIZE,\r\n    payload: {\r\n      size: size,\r\n      items:\r\n        size === \"\"\r\n          ? products\r\n          : products.filter(\r\n              (x) => x.availableSizes.indexOf(size.toUpperCase()) >= 0\r\n            ),\r\n    },\r\n  });\r\n};\r\n\r\nexport const sortProducts = (items, sort) => (dispatch) => {\r\n  const products = items.slice();\r\n  if (sort !== \"\") {\r\n    products.sort((a, b) =>\r\n      sort === \"lowestprice\"\r\n        ? a.price > b.price\r\n          ? 1\r\n          : -1\r\n        : a.price < b.price\r\n        ? 1\r\n        : -1\r\n    );\r\n  } else {\r\n    products.sort((a, b) => (a.id > b.id ? 1 : -1));\r\n  }\r\n  dispatch({\r\n    type: ORDER_PRODUCTS_BY_PRICE,\r\n    payload: {\r\n      sort: sort,\r\n      items: products,\r\n    },\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterProducts, sortProducts } from \"../actions/productActions\";\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-md-4\">{`${this.props.filteredProducts.length} products found.`}</div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            Order by\r\n            <select\r\n              className=\"form-control\"\r\n              value={this.props.sort}\r\n              onChange={(event) => {\r\n                this.props.sortProducts(\r\n                  this.props.filteredProducts,\r\n                  event.target.value\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">Select</option>\r\n              <option value=\"lowestprice\">Lowest to highest</option>\r\n              <option value=\"highestprice\">Highest to lowest</option>\r\n            </select>\r\n          </label>\r\n        </div>\r\n        <div className=\"col-md-4\">\r\n          <label>\r\n            {\" \"}\r\n            Filter Size\r\n            <select\r\n              className=\"form-control\"\r\n              value={this.props.size}\r\n              onChange={(event) => {\r\n                this.props.filterProducts(\r\n                  this.props.products,\r\n                  event.target.value\r\n                );\r\n              }}\r\n            >\r\n              <option value=\"\">ALL</option>\r\n              <option value=\"x\">Large</option>\r\n              <option value=\"s\">Medium</option>\r\n              <option value=\"m\">Small</option>\r\n              {/* <option value=\"l\">L</option>\r\n              <option value=\"xl\">XL</option>\r\n              <option value=\"xxl\">XXL</option> */}\r\n            </select>\r\n          </label>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  products: state.products.items,\r\n  filteredProducts: state.products.filteredItems,\r\n  size: state.products.size,\r\n  sort: state.products.sort,\r\n});\r\nexport default connect(mapStateToProps, { filterProducts, sortProducts })(\r\n  Filter\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport util from \"../util\";\r\nimport { addToCart, removeFromCart } from \"../actions/cartActions\";\r\nclass Basket extends Component {\r\n  render() {\r\n    const { cartItems } = this.props;\r\n\r\n    return (\r\n      <div className=\"alert alert-info\">\r\n        {cartItems.length === 0 ? (\r\n          \"Basket is empty\"\r\n        ) : (\r\n          <div>\r\n            You have {cartItems.length} items in the basket. <hr />\r\n          </div>\r\n        )}\r\n        {cartItems.length > 0 && (\r\n          <div>\r\n            <ul style={{ marginLeft: -25 }}>\r\n              {cartItems.map((item) => (\r\n                <li key={item.id}>\r\n                  <b>{item.title}</b>\r\n                  <button\r\n                    style={{ float: \"right\" }}\r\n                    className=\"btn btn-danger btn-xs\"\r\n                    onClick={(e) =>\r\n                      this.props.removeFromCart(this.props.cartItems, item)\r\n                    }\r\n                  >\r\n                    X\r\n                  </button>\r\n                  <br />\r\n                  {item.count} X {util.formatCurrency(item.price)}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n\r\n            <b>\r\n              Sum:{\" \"}\r\n              {util.formatCurrency(\r\n                cartItems.reduce((a, c) => a + c.price * c.count, 0)\r\n              )}\r\n            </b>\r\n            <button\r\n              onClick={() => alert(\"checkout\")}\r\n              className=\"btn btn-primary\"\r\n            >\r\n              checkout\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  cartItems: state.cart.items,\r\n});\r\nexport default connect(mapStateToProps, { addToCart, removeFromCart })(Basket);\r\n","import {\r\n  FETCH_PRODUCTS,\r\n  FILTER_PRODUCTS_BY_SIZE,\r\n  ORDER_PRODUCTS_BY_PRICE,\r\n} from \"../actions/types\";\r\n\r\nconst initState = { items: [], filteredItems: [], size: \"\", sort: \"\" };\r\nexport default function (state = initState, action) {\r\n  switch (action.type) {\r\n    case FETCH_PRODUCTS:\r\n      return { ...state, items: action.payload, filteredItems: action.payload };\r\n    case FILTER_PRODUCTS_BY_SIZE:\r\n      return {\r\n        ...state,\r\n        filteredItems: action.payload.items,\r\n        size: action.payload.size,\r\n      };\r\n    case ORDER_PRODUCTS_BY_PRICE:\r\n      return {\r\n        ...state,\r\n        filteredItems: action.payload.items,\r\n        sort: action.payload.sort,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport productReducers from \"./productReducers\";\r\nimport cartReducers from \"./cartReducers\";\r\n\r\nexport default combineReducers({\r\n  products: productReducers,\r\n  cart: cartReducers,\r\n});\r\n","import { ADD_TO_CART, REMOVE_FROM_CART } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n  switch (action.type) {\r\n    case ADD_TO_CART:\r\n      return { ...state, items: action.payload.cartItems };\r\n    case REMOVE_FROM_CART:\r\n      return { ...state, items: action.payload.cartItems };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers\";\r\n\r\nconst cartItems = localStorage.getItem(\"cartItems\") ? JSON.parse(localStorage.getItem(\"cartItems\")) : [];\r\nconst initState = { cart: { items: cartItems } };\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducers,\r\n  initState,\r\n  composeEnhancer(applyMiddleware(thunk))\r\n);\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport Products from \"./components/Products\";\r\nimport Filter from \"./components/Filter\";\r\nimport Basket from \"./components/Basket\";\r\nimport store from \"./store\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"container\">\r\n          <h1>E-commerce Shopping Cart Application</h1>\r\n          <hr />\r\n          <div className=\"row\">\r\n            <div className=\"col-md-9\">\r\n              <Filter />\r\n              <hr />\r\n              <Products />\r\n            </div>\r\n            <div className=\"col-md-3\">\r\n              <Basket />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}